version: 2.1 # use CircleCI 2.1

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12-browsers  

commands:
  install_rsync:
    description: 'Install Rsync'
    steps:
      - run: sudo apt install rsync
  yarn_install:
    description: 'Install Dependencies'
    steps:
      - run: yarn config set registry //registry.npmjs.org/
      - run: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          key: vitaba-murano-node12-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
            - node_modules
  restore_yarn_cache:
    description: 'Restore Cached Dependencies'
    steps:
      - restore_cache:
          keys:
            - vitaba-murano-node12-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - vitaba-murano-node12-
  setup_commands:
    description: 'Set commands'
    steps:
      - run:
          name: Setup Tasks 
          command: |- 
            echo "Circle SHA $CIRCLE_SHA1"
            if [ -z ${CIRCLE_PULL_REQUEST+x} ] ; then
            IS_PR=false
            else
            IS_PR=true
            fi;
            echo "IS PR $IS_PR"  
            echo 'export TASKS=$(node ./tools/scripts/calculate-commands.js $IS_PR $CIRCLE_SHA1)' &> $BASH_ENV  
            source $BASH_ENV  
            echo "Taks defined : $TASKS"
  validate-release:
    description: 'Set release env'
    steps:
      - run:
          name: Retrieve commit message 
          command: |- 
            chmod +x ./tools/scripts/release-message.sh
            ./tools/scripts/release-message.sh
  setup:
    description: 'Setup Executor'
    steps:
      - restore_yarn_cache
      - install_rsync          
      - setup_commands

jobs:
  install:
    executor: default
    steps:
      - restore_yarn_cache
      - yarn_install
      - setup_commands
  install-release:
    executor: default
    steps:
      - checkout
      - validate-release
      - restore_yarn_cache
      - yarn_install
      - setup_commands    
  checkout-job:
    executor: default
    steps:
      - checkout    
  basic-checks:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Check Commit Message Format
          command: yarn checkcommit     
  lint-vitaba-1:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Lint Part 1
          command: node ./tools/scripts/run-many.js $TASKS lint1 lint
  lint-vitaba-2:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Lint Part 2
          command: node ./tools/scripts/run-many.js $TASKS lint2 lint
  lint-vitaba-3:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Lint Part 3
          command: node ./tools/scripts/run-many.js $TASKS lint3 lint
  test-vitaba-1:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Unit Test Part 1
          command: node ./tools/scripts/run-many.js $TASKS test1 test
  test-vitaba-2:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Unit Test Part 2
          command: node ./tools/scripts/run-many.js $TASKS test2 test
  test-vitaba-3:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Unit Test Part 3
          command: node ./tools/scripts/run-many.js $TASKS test3 test                        
  e2e-vitaba-1:
    executor: default
    steps:
      - checkout
      - setup
      - setup_commands
      - run:
          name: E2E Affected Part 1
          command: node ./tools/scripts/run-many.js $TASKS e2e1 e2e 
  e2e-vitaba-2:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: E2E Affected Part 2
          command: node ./tools/scripts/run-many.js $TASKS e2e2 e2e
  e2e-vitaba-3:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: E2E Affected Part 3
          command: node ./tools/scripts/run-many.js $TASKS e2e3 e2e 
  release-message:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - run:
          name: Check Commit Message Format
          command: yarn release-message         
  build-vitaba-1:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - run:
          name: Build Artifacts Part 1
          command: node ./tools/scripts/run-many.js $TASKS build1 build  
      - persist_to_workspace:
          root: /home/circleci/repo
          paths:
            - dist/*
  build-vitaba-2:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - run:
          name: Build Artifacts Part 2
          command: node ./tools/scripts/run-many.js $TASKS build2 build  
      - persist_to_workspace:
          root: /home/circleci/repo
          paths:
            - dist/*    
  build-vitaba-3:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - run:
          name: Build Artifacts Part 3
          command: node ./tools/scripts/run-many.js $TASKS build3 build  
      - persist_to_workspace:
          root: /home/circleci/repo
          paths:
            - dist/*                          
  deploy-vitaba-1:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - attach_workspace:
          at: /home/circleci/repo
      - run: 
          name: Setup .npmrc
          command: |-
            echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
            npm whoami
      - run:
          name: Deploy Part 1
          command: node ./tools/scripts/run-many.js $TASKS deploy1 deploy
  deploy-vitaba-2:
    executor: default
    steps:
     - checkout
     - validate-release
     - setup
     - attach_workspace:
          at: /home/circleci/repo
     - run: 
          name: Setup .npmrc
          command: |-
            echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
            npm whoami
     - run:
        name: Deploy Part 2
        command: node ./tools/scripts/run-many.js deploy2 deploy
  deploy-vitaba-3:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup
      - attach_workspace:
            at: /home/circleci/repo
      - run: 
            name: Setup .npmrc
            command: |-
              echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
              npm whoami
      - run:
          name: Deploy Part 3
          command: node ./tools/scripts/run-many.js $TASKS deploy3 deploy
  generate-release:
    executor: default
    steps:
      - checkout
      - validate-release
      - setup 
      - run:
          name: Generate Release
          command: yarn vitaba-release
  deploy-firebase:
    executor: default
    steps:
      - checkout
      - validate-release
      - attach_workspace:
          at: /home/circleci/repo
      - run: 
          name: Deploy to firebase
          command: |-
            node_modules/.bin/firebase deploy --token firebase deploy --only hosting:beta --non-interactive --token=$FIREBASE_TOKEN      
workflows:
  version: 2.1
  pr_to_master:
    jobs:
      - checkout-job:
          filters:
            branches:
              ignore: master
      - install: 
          requires: 
            - checkout-job
          filters:
            branches:
              ignore: master
      - basic-checks:
          requires:
            - checkout-job
          filters:
            branches:
              ignore: master
      - lint-vitaba-1:
          requires:
            - install
          filters:
            branches:
              ignore: master
      - lint-vitaba-2:
          requires:
            - install
          filters:
            branches:
              ignore: master  
      - lint-vitaba-3:
          requires:
            - install
          filters:
            branches:
              ignore: master 
      - test-vitaba-1:
          requires:
            - install
          filters:
            branches:
              ignore: master  
      - test-vitaba-2:
          requires:
            - install
          filters:
            branches:
              ignore: master  
      - test-vitaba-3:
          requires:
            - install
          filters:
            branches:
              ignore: master              
      - e2e-vitaba-1:
          requires:
            - install
          filters:
            branches:
              ignore: master  
      - e2e-vitaba-2:
          requires:
            - install
          filters:
            branches:
              ignore: master  
      - e2e-vitaba-3:
          requires:
            - install 
          filters:
            branches:
              ignore: master
              
  master_merge:
    jobs:
      - checkout-job:
          filters:
            branches:
              only: master
      - install-release: 
          requires: 
            - checkout-job  
          filters:
            branches:
              only: master  
      - build-vitaba-1:
          requires:
            - install-release
          filters:
            branches:
              only: master
      - build-vitaba-2:
          requires:
            - install-release
          filters:
            branches:
              only: master
      - build-vitaba-3:
          requires:
            - install-release
          filters:
            branches:
              only: master                 
      - generate-release:
          requires:
            - build-vitaba-1
            - build-vitaba-2
            - build-vitaba-3
          filters:
            branches:
              only: master 
      - deploy-firebase:
          requires:
            - generate-release
          filters:
            branches:
              only: master       
      - deploy-vitaba-1:
          requires:
            - generate-release
          filters:
            branches:
              only: master
      - deploy-vitaba-2:
          requires:
            - generate-release
          filters:
            branches:
              only: master
      - deploy-vitaba-3:
          requires:
            - generate-release 
          filters:
            branches:
              only: master                