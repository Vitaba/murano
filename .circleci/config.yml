version: 2.1 # use CircleCI 2.1

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12-browsers
    environment:
      COMMANDS: empty  

commands:
  install_rsync:
    description: 'Install Rsync'
    steps:
      - run: sudo apt install rsync
  yarn_install:
    description: 'Install Dependencies'
    steps:
      - run: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          key: vitaba-murano-node12-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
            - node_modules
  restore_yarn_cache:
    description: 'Restore Cached Dependencies'
    steps:
      - restore_cache:
          keys:
            - vitaba-murano-node12-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - vitaba-murano-node12-
  setup_commands:
    description: 'Setup Executor'
    steps:
      - run: echo "export COMMANDS=$(node ./tools/scripts/calculate-commands.js false)" >> $BASH_ENV

jobs:
  install:
    executor: default
    steps:
      - checkout
      - restore_yarn_cache
      - yarn_install
  setup_env:
    executor: default
    steps:
      - setup_commands
  basic-checks:
    executor: default
    steps:
      - install
      - run:
          name: Check Commit Message Format
          command: yarn checkcommit
  lint-vitaba-1:
    executor: default
    steps:
      - install
      - run:
          name: Lint Part 1
          command: node ./tools/scripts/run-many.js $COMMANDS lint1 lint
  lint-vitaba-2:
    executor: default
    steps:
      - install
      - run:
          name: Lint Part 2
          command: node ./tools/scripts/run-many.js $COMMANDS lint2 lint
  lint-vitaba-3:
    executor: default
    steps:
      - install
      - run:
          name: Lint Part 3
          command: node ./tools/scripts/run-many.js $COMMANDS lint3 lint
  test-vitaba-1:
    executor: default
    steps:
      - install
      - run:
          name: Unit Test Part 1
          command: node ./tools/scripts/run-many.js $COMMANDS test1 test
  test-vitaba-2:
    executor: default
    steps:
      - install
      - run:
          name: Unit Test Part 2
          command: node ./tools/scripts/run-many.js $COMMANDS test2 test
  test-vitaba-3:
    executor: default
    steps:
      - install
      - run:
          name: Unit Test Part 3
          command: node ./tools/scripts/run-many.js $COMMANDS test3 test                        
  e2e-vitaba:
    executor: default
    steps:
      - install
      - run:
          name: E2E Affected
          command: node_modules/.bin/nx affected:e2e                       
  build-vitaba:
    executor: default
    steps:
      - install
      - run:
          name: Building all libraries
          command: node_modules/.bin/nx affected:build --all     
  deploy-vitaba-1:
    executor: default
    steps:
      - install
      - run:
          name: Deploy Part 1
          command: node ./tools/scripts/run-many.js $COMMANDS deploy1 deploy
  deploy-vitaba-2:
    executor: default
    steps:
      - install
      - run:
          name: Deploy Part 2
          command: node ./tools/scripts/run-many.js deploy2 deploy
  deploy-vitaba-3:
    executor: default
    steps:
      - install
      - run:
          name: Deploy Part 3
          command: node ./tools/scripts/run-many.js $COMMANDS deploy3 deploy                            

workflows:
  version: 2.1
  default_workflow:
    jobs:
      - install
      - setup:
          requires: 
            - install
      - basic-checks:
          requires:
            - setup
      - lint-vitaba-1:
          requires:
            - setup
      - lint-vitaba-2:
          requires:
            - setup
      - lint-vitaba-3:
          requires:
            - setup
      - test-vitaba-1:
          requires:
            - setup
      - test-vitaba-2:
          requires:
            - setup
      - test-vitaba-3:
          requires:
            - setup            
      - e2e-vitaba:
          requires:
            - setup
      - build-vitaba:
          requires:
            - setup