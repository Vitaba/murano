// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputControlComponent should be default 1`] = `
<vitaba-input-control-sample-implementation
  config={[Function Object]}
  data={[Function Object]}
  styles={[Function Object]}
>
  <vitaba-input-control>
    
    
    <div
      class="md:w-2/3"
    >
      <div
        class="relative"
      />
      
      <input
        class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-auto py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500 ng-untouched ng-pristine ng-valid"
        placeholder="placeholder"
        type="text"
      />
      
    </div>
    
  </vitaba-input-control>
</vitaba-input-control-sample-implementation>
`;

exports[`InputControlComponent should throw errors when config is not in right format 1`] = `
<vitaba-input-control-sample-implementation
  config={[Function Object]}
  data={[Function Object]}
  styles={[Function Object]}
>
  <vitaba-input-control>
    
     {
    "valid": false,
    "guard": "isInputConfig",
    "value": {
      "fControl": {
        "validator": null,
        "asyncValidator": null,
        "pristine": true,
        "touched": false,
        "_onDisabledChange": [
          null
        ],
        "_onChange": [
          null
        ],
        "_pendingValue": "name",
        "value": "name",
        "status": "VALID",
        "errors": null,
        "valueChanges": {
          "_isScalar": false,
          "observers": [],
          "closed": false,
          "isStopped": false,
          "hasError": false,
          "thrownError": null,
          "__isAsync": false
        },
        "statusChanges": {
          "_isScalar": false,
          "observers": [],
          "closed": false,
          "isStopped": false,
          "hasError": false,
          "thrownError": null,
          "__isAsync": false
        }
      },
      "placeholder": 1,
      "type": 1
    },
    "message": "Is not a input config",
    "errors": [
      {
        "valid": false,
        "guard": "hasProperties",
        "value": {
          "fControl": {
            "validator": null,
            "asyncValidator": null,
            "pristine": true,
            "touched": false,
            "_onDisabledChange": [
              null
            ],
            "_onChange": [
              null
            ],
            "_pendingValue": "name",
            "value": "name",
            "status": "VALID",
            "errors": null,
            "valueChanges": {
              "_isScalar": false,
              "observers": [],
              "closed": false,
              "isStopped": false,
              "hasError": false,
              "thrownError": null,
              "__isAsync": false
            },
            "statusChanges": {
              "_isScalar": false,
              "observers": [],
              "closed": false,
              "isStopped": false,
              "hasError": false,
              "thrownError": null,
              "__isAsync": false
            }
          },
          "placeholder": 1,
          "type": 1
        },
        "errors": [
          {
            "value": {
              "name": "placeholder",
              "type": "string"
            },
            "guard": "String Validation",
            "message": "Is not a string",
            "valid": false
          },
          {
            "value": {
              "name": "type",
              "type": "string"
            },
            "guard": "String Validation",
            "message": "Is not a string",
            "valid": false
          }
        ]
      }
    ]
  } 
    
  </vitaba-input-control>
</vitaba-input-control-sample-implementation>
`;
